{"version":3,"sources":["app.coffee","app.min.js","shared.coffee","controllers/game.coffee","controllers/lobby.coffee","services/filters.coffee","services/game-client.coffee"],"names":["app","angular","module","config","$stateProvider","$urlRouterProvider","$urlMatcherFactoryProvider","$locationProvider","$provide","html5Mode","strictMode","otherwise","$injector","$location","invoke","$state","go","state","url","templateUrl","controller","options","title","decorator","$delegate","defer","deferred","promise","success","fn","then","error","run","$rootScope","game","call","this","SharedResources","prototype","STATE","SETUP","TEAM_SELECT","TEAM_VOTE","POST_TEAM_VOTE","MISSION","MISSION_OUTCOME","spyCount","playerCount","Math","ceil","teamSize","mission","table","Error","exports","factory","bind","me","apply","arguments","$log","$scope","$timeout","$modal","shared","GameController","showTip","teamFull","getTeam","isLeader","isSpy","lockTeam","pickMember","modal","playerId","players","votes","voteSuccess","open","resolve","_this","Object","keys","length","$on","event","dismiss","keyboard","backdrop","team","map","p","name","result","accept","teamVote","toggleMemberForMission","getRange","n","results","i","push","$modalInstance","IntroModalController","close","VoteModalController","reject","LobbyController","changeName","toggleReady","ref","ready","ref1","oldName","newName","ChangeNameController","cancel","filter","input","isObject","$window","GameClient","playersUpdated","setupLobby","io","on","$broadcast","console","log","id","player","leader","arg","delta","key","value","len","emit","onMission","vote","role"],"mappings":"CAAA,WAAA,GAAAA,EAAAA,GAAMC,QAAQC,OAAO,UAAW,YAAa,iBAAiBC,QAC5D,iBAAkB,qBAAsB,6BAA8B,oBAAqB,WAC3F,SAACC,EAAkBC,EAAsBC,EAA8BC,EAAqBC,GC+BxF,MD7BFD,GAAkBE,WAAU,GAG5BH,EAA2BI,YAAW,GAGtCL,EAAmBM,UAAU,SAACC,EAAWC,GCFrC,MDGFD,GAAUE,QACR,SACA,SAACC,GCHG,MDGQA,GAAOC,GAAG,YAI1BZ,EAEGa,MAAM,SACLC,IAAa,KACbC,YAAa,aACbC,WAAa,2BACbC,SACEC,MAAO,gBAGVL,MAAM,QACLE,YAAa,YACbC,WAAa,yBACbC,SACEC,MAAO,UAGVL,MAAM,OACLE,YAAa,WACbE,SACEC,MAAO,oBAGbd,EAASe,UAAU,MACjB,YACA,SAACC,GACC,GAAAC,EAeA,OAfAA,GAAQD,EAAUC,MAElBD,EAAUC,MAAQ,WAChB,GAAAC,EAUA,OAVAA,GAAWD,IAEXC,EAASC,QAAQC,QAAU,SAACC,GAE1B,MADAH,GAASC,QAAQG,KAAKD,GACfH,EAASC,SAElBD,EAASC,QAAQI,MAAQ,SAACF,GAExB,MADAH,GAASC,QAAQG,KAAK,KAAMD,GACrBH,EAASC,SAEXD,GAEFF,QAIfxB,EAAIgC,KACF,aAAc,SAAU,aACxB,SAACC,EAAclB,EAAUmB,SCNxBC,KAAKC,MCzDR,WAAA,GAAAC,EAAMA,GAAA,WD+DF,QAASA,MA2BT,MAzBAA,GAAgBC,UChElBC,OACEC,MAAiB,QACjBC,YAAiB,cACjBC,UAAiB,YACjBC,eAAiB,iBACjBC,QAAiB,UACjBC,gBAAiB,mBDmEjBR,EAAgBC,UChElBQ,SAAU,SAACC,GDiEP,MCjEuBC,MAAKC,KAAKF,EAAc,IDoEjDV,EAAgBC,UCjElBY,SAAU,SAACH,EAAaI,GACtB,GAAAC,EAAA,IAAiF,EAAdL,GAAmBA,EAAc,GAApG,KAAMM,OAAM,mDACZ,IAAmD,EAAVF,GAAeA,EAAU,EAAlE,KAAME,OAAM,yBDwEV,OCrEFD,KACG,EAAG,EAAG,EAAG,EAAG,EAAG,IACf,EAAG,EAAG,EAAG,EAAG,EAAG,IACf,EAAG,EAAG,EAAG,EAAG,EAAG,IACf,EAAG,EAAG,EAAG,EAAG,EAAG,IACf,EAAG,EAAG,EAAG,EAAG,EAAG,IAGlBA,EAAMD,EAAU,GAAGJ,EAAc,IDgE1BV,KC7DW,mBAAZnC,SAA2BA,OAAOoD,QAC1CpD,OAAOoD,QAAU,GAAIjB,GAErBpC,QAAQC,OAAO,UAAUqD,QAAQ,kBAAmB,WDkEhD,MClEmD,IAAIlB,MDsE1DF,KAAKC,MEvGR,WAAA,GAAAoB,GAAA,SAAA3B,EAAA4B,GAAA,MAAA,YAAA,MAAA5B,GAAA6B,MAAAD,EAAAE,YAAA1D,SAAQC,OAAO,UAAUkB,WAAW,kBAClC,SAAU,OAAQ,SAAU,WAAY,SAAU,aAAc,kBAChE,SAACL,EAAU6C,EAAQC,EAAUC,EAAYC,EAAU7B,EAAc8B,GAAW,GAAAC,EF6GxE,OE7GwE,KAAUA,EAAA,WACvE,QAAAA,KF8GP7B,KAAK8B,QAAUV,EAAKpB,KAAK8B,QAAS9B,MAClCA,KAAK+B,SAAWX,EAAKpB,KAAK+B,SAAU/B,MACpCA,KAAKgC,QAAUZ,EAAKpB,KAAKgC,QAAShC,MAClCA,KAAKc,SAAWM,EAAKpB,KAAKc,SAAUd,MACpCA,KAAKiC,SAAWb,EAAKpB,KAAKiC,SAAUjC,MACpCA,KAAKkC,MAAQd,EAAKpB,KAAKkC,MAAOlC,MAC9BA,KAAKmC,SAAWf,EAAKpB,KAAKmC,SAAUnC,MACpCA,KAAKoC,WAAahB,EAAKpB,KAAKoC,WAAYpC,KEpH5C,IAAAqC,EAAArC,MAACsC,SAAWxC,EAAKwC,SACjBtC,KAACuC,QAAUzC,EAAKyC,QAChBvC,KAACnB,MAAQiB,EAAKjB,MACdmB,KAACe,QAAUjB,EAAKiB,QAChBf,KAACwC,MAAQ1C,EAAK0C,MACdxC,KAACyC,YAAc,KACfzC,KAAC4B,OAASA,EAEN5B,KAACuC,SAAYvC,KAACsC,UAChB3D,EAAOC,GAAG,SAGZyD,EAAQV,EAAOe,MACb3D,YAAa,aACbC,WAAa,gCACb2D,SACET,MAAU,SAAAU,GFqHJ,MErHI,YFsHF,MEtHKA,GAACV,UAAJlC,MACVU,SAAU,SAAAkC,GFyHJ,MEzHI,YF0HF,ME1HKhB,GAAOlB,SAASmC,OAAOC,KAAKF,EAACL,SAASQ,UAAzC/C,SAGdyB,EAAOuB,IAAI,iBAAkB,SAAAJ,GF6HvB,ME7HuB,UAACK,EAAOV,GF8H7B,ME9HyCb,GAAS,WF+HhD,ME9HRkB,GAACL,QAAUA,MADgBvC,OAI7ByB,EAAOuB,IAAI,eAAgB,SAAAJ,GFgIrB,MEhIqB,UAACK,EAAOpE,GFiI3B,MEjIqC6C,GAAS,WAIpD,MAHAkB,GAAC/D,MAAQA,EAGNA,IAAS+C,EAAOzB,MAAMG,WFgIF,MAAT+B,GE/HZA,EAAOa,QAAQ,UACfb,EAAQV,EAAOe,MACb3D,YAAa,YACbC,WAAa,+BACbmE,UAAa,EACbC,SAAa,SACbT,SACEU,KAAM,WFkII,MElIDT,GAACZ,UAAUsB,IAAI,SAACC,GFmIb,MEnImBA,GAAEC,WACrCnB,EAAMoB,OAAO/D,KAAK,SAACgE,GFwIT,MEvIR5D,GAAK6D,SAASD,IACd,WFwIQ,MEvIR5D,GAAK6D,UAAS,MAZlB,WAJyB3D,OAkB3ByB,EAAOuB,IAAI,cAAe,SAAAJ,GF4IpB,ME5IoB,UAACK,EAAOQ,GF6I1B,ME7IqC/B,GAAS,WFiJ5C,MAHa,OAATW,GE7IZA,EAAOa,QAAQ,UACfN,EAACH,YAAcgB,MAFSzD,OFgMxB,MAzCA6B,GAAe3B,UElJnBkC,WAAY,SAACE,GFmJP,MEnJoBxC,GAAK8D,uBAAuBtB,IFsJlDT,EAAe3B,UEnJnBiC,SAAU,WFoJJ,MEpJOrC,GAAKqC,YFuJdN,EAAe3B,UEpJnBgC,MAAO,WFqJD,MErJIpC,GAAKoC,SFwJXL,EAAe3B,UErJnB+B,SAAU,WFsJJ,MEtJOnC,GAAKmC,YFyJdJ,EAAe3B,UEtJnBY,SAAU,WFuJJ,MEvJOhB,GAAKgB,YF0Jde,EAAe3B,UEvJnB8B,QAAS,WFwJH,MExJMlC,GAAKkC,WF2JbH,EAAe3B,UExJnB6B,SAAU,WFyJJ,MEzJO/B,MAACgC,UAAUe,SAAU/C,KAACc,YF4J/Be,EAAe3B,UE1JnB4B,QAAS,WF2JH,ME3JM9B,MAACnB,QAAS+C,EAAOzB,MAAME,aAAeL,KAACnB,QAAS+C,EAAOzB,MAAMI,gBF8JrEsB,EAAe3B,UE3JnB2D,SAAU,SAACC,GAAM,GAAAC,EF6JX,OE7JW,YF8JTA,IACA,KAAK,GAAIC,GAAI,EAAQF,GAAL,EAAcA,GAALE,EAASA,GAAKF,EAAQA,GAAL,EAASE,IAAMA,IAAMD,EAAQE,KAAKD,EAC5E,OAAOD,IACNzC,MAAMtB,OAGJ6B,SEjKfhE,QAAQC,OAAO,UAAUkB,WAAW,wBAClC,iBAAkB,SAAU,QAAS,WACrC,SAACkF,EAAkBzC,EAAUS,EAASxB,GAAa,GAAAyD,EFwK/C,OExK+C,KAAUA,EAAA,WAC9C,QAAAA,KACX1C,EAAOS,MAAQA,EACfT,EAAOf,SAAWA,EF+KhB,MAJAyD,GAAqBjE,UEzKzBkE,MAAO,WF0KD,MEzKJF,GAAehB,QAAQ,WF4KdiB,SEzKftG,QAAQC,OAAO,UAAUkB,WAAW,uBAClC,iBAAkB,OAClB,SAACkF,EAAkBb,GAAS,GAAAgB,EFgLxB,OEhLwB,KAAUA,EAAA,WACvB,QAAAA,KAAGrE,KAACqD,KAAOA,EF4LpB,MARAgB,GAAoBnE,UElLxBwD,OAAQ,WFmLF,MEnLKQ,GAAeE,OAAM,IFsL5BC,EAAoBnE,UErLxBoE,OAAQ,WFsLF,MEtLKJ,GAAeE,OAAM,IFyLrBC,UAMZtE,KAAKC,MG7RR,WAAA,GAAAoB,GAAA,SAAA3B,EAAA4B,GAAA,MAAA,YAAA,MAAA5B,GAAA6B,MAAAD,EAAAE,YAAA1D,SAAQC,OAAO,UAAUkB,WAAW,mBAClC,SAAU,OAAQ,SAAU,WAAY,SAAU,aAClD,SAACL,EAAU6C,EAAQC,EAAUC,EAAYC,EAAU7B,GAAS,GAAAyE,EHmSxD,OGnSwD,KAAUA,EAAA,WACvD,QAAAA,KHoSPvE,KAAKwE,WAAapD,EAAKpB,KAAKwE,WAAYxE,MACxCA,KAAKyE,YAAcrD,EAAKpB,KAAKyE,YAAazE,KGpS9C,IAAA0E,EAAA1E,MAACsC,SAAWxC,EAAKwC,SACjBtC,KAACuC,QAAUzC,EAAKyC,QAChBvC,KAAC2E,MAAW3E,KAACuC,QAAJ,OAAAmC,EAAA1E,KAAAuC,QAAAvC,KAAAsC,WAAAoC,EAAsCC,MAAA,QAAW,EAE1DlD,EAAOuB,IAAI,YAAa,SAAAJ,GHsSlB,MGtSkB,UAACK,EAAOX,GHuSxB,MGtSNZ,GAAS,WHuSD,MGvSIkB,GAACN,SAAWA,MADFtC,OAGxByB,EAAOuB,IAAI,iBAAkB,SAAAJ,GH0SvB,MG1SuB,UAACK,EAAOV,GH2S7B,MG1SNb,GAAS,WACP,GAAAkD,EH4SM,OG5SNhC,GAACL,QAAUA,EACXK,EAAC+B,MAAD,OAAAC,EAAAhC,EAAAL,QAAAK,EAAAN,WAAAsC,EAA8BD,MAAA,WAHL3E,OH2U3B,MAvBAuE,GAAgBrE,UG/SpBuE,YAAa,WACX,GAAAC,EHiTI,OGjTJ5E,GAAK2E,cACLzE,KAAC2E,MAAD,OAAAD,EAAA1E,KAAAuC,QAAAvC,KAAAsC,WAAAoC,EAA8BC,MAAA,QHmT5BJ,EAAgBrE,UGjTpBsE,WAAY,WHkTN,MGjTJ7C,GAAOe,MACL3D,YAAa,kBACbC,WAAa,gCACb2D,SACEkC,QAAS,SAAAjC,GHkTH,MGlTG,YAAG,GAAA8B,EHoTJ,OAAgD,QAAxCA,EAAM9B,EAAML,QAAQK,EAAMN,WAAqBoC,EGpT9BlB,KAAA,SAAxBxD,SACZyD,OAAO/D,KAAK,SAACoF,GHwTR,MGvTJhF,GAAK0E,WAAWM,MH2TTP,SGxTf1G,QAAQC,OAAO,UAAUkB,WAAW,wBAClC,iBAAkB,UAClB,SAACkF,EAAkBW,GAAY,GAAAE,EH+T3B,OG/T2B,KAAUA,EAAA,WAC1B,QAAAA,KHgUP/E,KAAKwE,WAAapD,EAAKpB,KAAKwE,WAAYxE,MG/T5CA,KAACwD,KAAOqB,EH2UN,MARAE,GAAqB7E,UGjUzBsE,WAAY,WHkUN,MGjUJN,GAAeE,MAAMpE,KAACwD,OHoUpBuB,EAAqB7E,UGlUzB8E,OAAQ,WHmUF,MGlUJd,GAAehB,QAAQ,WHqUd6B,UAMZhF,KAAKC,MInXR,WAAA,GAAApC,EAAAA,GAAMC,QAAQC,OAAO,UAGrBF,EAAIqH,OAAO,YAAa,WJwXpB,MIxXuB,UAACC,GAC1B,MAAarH,SAAQsH,SAASD,GAE9BrC,OAAOC,KAAKoC,GAAOnC,OAFZ,MJ+XNhD,KAAKC,MKnYR,WAAA,GAAAoB,GAAA,SAAA3B,EAAA4B,GAAA,MAAA,YAAA,MAAA5B,GAAA6B,MAAAD,EAAAE,YAAA1D,SAAQC,OAAO,UAAUqD,QAAQ,cAC/B,SAAU,UAAW,aAAc,kBACnC,SAACxC,EAAUyG,EAAWvF,EAAc+B,GAAW,GAAAyD,ELyY3C,OKzY2C,KAAUA,EAAA,WAG1C,QAAAA,KL4YPrF,KAAKgC,QAAUZ,EAAKpB,KAAKgC,QAAShC,MAClCA,KAAKc,SAAWM,EAAKpB,KAAKc,SAAUd,MACpCA,KAAKiC,SAAWb,EAAKpB,KAAKiC,SAAUjC,MACpCA,KAAKkC,MAAQd,EAAKpB,KAAKkC,MAAOlC,MAC9BA,KAAK2D,SAAWvC,EAAKpB,KAAK2D,SAAU3D,MACpCA,KAAKmC,SAAWf,EAAKpB,KAAKmC,SAAUnC,MACpCA,KAAK4D,uBAAyBxC,EAAKpB,KAAK4D,uBAAwB5D,MAChEA,KAAKyE,YAAcrD,EAAKpB,KAAKyE,YAAazE,MAC1CA,KAAKsF,eAAiBlE,EAAKpB,KAAKsF,eAAgBtF,MAChDA,KAAKuF,WAAanE,EAAKpB,KAAKuF,WAAYvF,MKnZ5CwF,EAAKJ,EAAQI,KAGbxF,KAACsC,SAAW,KACZtC,KAACuC,QAAU,KACXvC,KAACnB,MAAQ+C,EAAOzB,MAAMC,MACtBJ,KAACe,QAAU,EACXf,KAACwC,MAAQ,EAETxC,KAACuF,aAGDC,EAAGC,GAAG,aAAc,SAAA7C,GLgZd,MKhZc,UAAC/D,GLkZb,MKjZN+D,GAAC/D,MAAQA,EACTF,EAAOC,GAAG,UAFQoB,OAIpBwF,EAAGC,GAAG,aAAc,SAAA7C,GLkZd,MKlZc,UAAC/D,GLqZb,MKpZN+D,GAAC/D,MAAQA,EACTgB,EAAW6F,WAAW,eAAgB9C,EAAC/D,OACvC8G,QAAQC,IAAI,4BAA4B/G,KAHtBmB,OAKpBwF,EAAGC,GAAG,mBAAoB,SAAChC,GLoZrB,MKnZJ5D,GAAW6F,WAAW,cAAejC,KAGvC+B,EAAGC,GAAG,oBAAqB,SAAA7C,GLmZrB,MKnZqB,UAACN,GAC1B,GAAAuD,GAAAC,EAAApB,CAAAA,GAAA9B,EAAAL,OAAA,KAAAsD,IAAAnB,GLsZQoB,EAASpB,EAAImB,GKrZnBC,EAAOC,OAASF,IAAMvD,CLwZlB,OKvZNM,GAAC0C,mBAHwBtF,OAM3BwF,EAAGC,GAAG,eAAgB,SAAA7C,GLwZhB,MKxZgB,UAACoD,GACrB,GAAAC,GAAAC,EAAA3C,EAAAjB,EAAA6D,CADsB7D,GAAA0D,EAAA1D,SAAU2D,EAAAD,EAAAC,MAC7BrD,EAACL,QAAQD,KACViB,EAAIX,EAACL,QAAQD,GACbqD,QAAQC,IAAI,sBAAsBrC,EAAEC,KAAK,KACzCmC,QAAQC,IAAIK,IAEiBrD,EAACL,QAAQD,KAAxCM,EAACL,QAAQD,MACT,KAAA4D,IAAAD,GL6ZQE,EAAQF,EAAMC,GK5ZpBtD,EAACL,QAAQD,GAAU4D,GAAOC,CL+ZtB,OK9ZNvD,GAAC0C,mBATmBtF,OAnCxB,GAAAwF,ELuiBI,OKviBJA,GAAK,KL+cDH,EAAWnF,UK/ZfqF,WAAY,WLibN,MK/aJC,GAAGC,GAAG,kBAAmB,SAAA7C,GL+ZnB,MK/ZmB,UAACoD,GACxB,GAAAhC,GAAAoC,EAAA7C,EAAAuC,EAAAvD,CAEA,KAHyBuD,EAAAE,EAAAF,OAAQvD,EAAAyD,EAAAzD,QACjCK,EAACN,SAAWwD,EACZlD,EAACL,WACDyB,EAAA,EAAAoC,EAAA7D,EAAAQ,OAAAqD,EAAApC,EAAAA,ILkaQT,EAAIhB,EAAQyB,GKjalBpB,EAACL,QAAQgB,EAAEsC,IAAMtC,CLqab,OKpaN1D,GAAW6F,WAAW,YAAaI,GACnClD,EAAC0C,mBANsBtF,OAOzBwF,EAAGC,GAAG,YAAa,WLsab,MKtagB9G,GAAOC,GAAG,WAEhC4G,EAAGC,GAAG,cAAe,SAAA7C,GLuaf,MKvae,UAACN,GLyad,aKxaCM,GAACL,QAAQD,GAChBM,EAAC0C,mBAFkBtF,QL8anBqF,EAAWnF,UKzafoF,eAAgB,WL0aV,MKzaJzF,GAAW6F,WAAW,iBAAkB1F,KAACuC,UL4avC8C,EAAWnF,UKzafsE,WAAY,SAAChB,GL0aP,MKzaJgC,GAAGa,KAAK,oBAAqB7C,IL4a3B6B,EAAWnF,UKzafuE,YAAa,WL4aP,MK3aJe,GAAGa,KAAK,eACRrG,KAACuC,QAAQvC,KAACsC,UAAUqC,OAAS3E,KAACuC,QAAQvC,KAACsC,UAAUqC,MACjD3E,KAACsF,kBL4aCD,EAAWnF,UKzaf0D,uBAAwB,SAACtB,GACvB,MAAWtC,MAACiC,YAEZuD,EAAGa,KAAK,mBAAoB/D,GAC5BtC,KAACuC,QAAQD,GAAUgE,WAAatG,KAACuC,QAAQD,GAAUgE,UACnDtG,KAACsF,kBAJD,QLibED,EAAWnF,UK1afiC,SAAU,WACR,MAAWnC,MAACiC,WAEZuD,EAAGa,KAAK,qBAFR,QLgbEhB,EAAWnF,UK3afyD,SAAU,SAACD,GL6aL,MK5aJ1D,MAACuC,QAAQvC,KAACsC,UAAUiE,KAAU7C,EAAY,SAAc,SACxD8B,EAAGa,KAAK,iBAAkB3C,IL8axB2B,EAAWnF,UK3afgC,MAAO,WAAG,GAAAwC,EL6aJ,OK7aiC,SL6ac,OAAtCA,EAAM1E,KAAKuC,QAAQvC,KAAKsC,WAAqBoC,EK7a7B8B,KAAA,SLgb3BnB,EAAWnF,UK7af+B,SAAU,WAAG,GAAAyC,EL+aP,UK/aQ,OAAAA,EAAA1E,KAAAuC,QAAAvC,KAAAsC,WAAAoC,EAAsBqB,OAAA,SLkbhCV,EAAWnF,UK/afY,SAAU,WLgbJ,MKhbOc,GAAOd,SAAS+B,OAAOC,KAAK9C,KAACuC,SAASQ,OAAQ/C,KAACe,ULmbxDsE,EAAWnF,UKhbf8B,QAAS,WACP,GAAA6D,GAAAC,EAAApB,EAAArB,CAAAA,MACAqB,EAAA1E,KAAAuC,OAAA,KAAAsD,IAAAnB,GLmbMoB,EAASpB,EAAImB,GKlbIC,EAAOQ,WAA5BjD,EAAKY,KAAK6B,ELubR,OKtbJzC,ILybSgC,UAMZtF,KAAKC","file":"app.min.js","sourcesContent":["app = angular.module('resist', ['ui.router', 'ui.bootstrap']).config [\n  '$stateProvider', '$urlRouterProvider', '$urlMatcherFactoryProvider', '$locationProvider', '$provide',\n  ($stateProvider,   $urlRouterProvider,   $urlMatcherFactoryProvider,   $locationProvider,   $provide) ->\n    # Turn on HTML5 url mode\n    $locationProvider.html5Mode true\n\n    # Allow matching with slashes at the end of a URL\n    $urlMatcherFactoryProvider.strictMode false\n\n    # 404 on missing pages\n    $urlRouterProvider.otherwise ($injector, $location) ->\n      $injector.invoke [\n        '$state',\n        ($state) -> $state.go '404'\n      ]\n\n    # Set up our states/routes\n    $stateProvider\n      # Lobby\n      .state 'lobby',\n        url:         '^/'\n        templateUrl: 'lobby.html'\n        controller:  'LobbyController as lobby'\n        options:\n          title: 'Game Lobby'\n\n      # Game\n      .state 'game',\n        templateUrl: 'game.html'\n        controller:  'GameController as game'\n        options:\n          title: 'Game'\n\n      # 404 state\n      .state '404',\n        templateUrl: '404.html'\n        options:\n          title: 'Page not found'\n\n    # Adds the 'success' and 'error' convenience methods that the $http promises have\n    $provide.decorator '$q', [\n      '$delegate',\n      ($delegate) ->\n        defer = $delegate.defer\n\n        $delegate.defer = ->\n          deferred = defer()\n\n          deferred.promise.success = (fn) ->\n            deferred.promise.then fn\n            return deferred.promise\n\n          deferred.promise.error = (fn) ->\n            deferred.promise.then null, fn\n            return deferred.promise\n\n          return deferred\n\n        return $delegate\n    ]\n]\n\napp.run [\n  '$rootScope', '$state', 'GameClient',\n  ($rootScope,   $state,   game) ->\n    # We pop the game server in here to ensure it is loaded immediately\n]",null,"# Resources used by both the server and client\nclass SharedResources\n  STATE:\n    SETUP:           'setup'\n    TEAM_SELECT:     'team select'\n    TEAM_VOTE:       'team vote'\n    POST_TEAM_VOTE:  'post team vote'\n    MISSION:         'mission'\n    MISSION_OUTCOME: 'mission outcome'\n\n  # The number of spies a game should have given the player count\n  spyCount: (playerCount) -> Math.ceil(playerCount / 3)\n\n  # The number of team members this mission should have\n  teamSize: (playerCount, mission) ->\n    throw Error('Player count must be between 5 and 10, inclusive') if playerCount < 5 || playerCount > 10\n    throw Error('Invalid mission number') if mission < 1 || mission > 5\n\n    # From Wikipedia: https://en.wikipedia.org/wiki/The_Resistance_(game)#Rounds\n    table = [\n      [2, 2, 2, 3, 3, 3]\n      [3, 3, 3, 4, 4, 4]\n      [2, 4, 3, 4, 4, 4]\n      [3, 3, 4, 5, 5, 5]\n      [3, 4, 4, 5, 5, 5]\n    ]\n\n    table[mission - 1][playerCount - 5]\n\n# Export this as an Angular or Node.js object\nif typeof module isnt 'undefined' && module.exports\n  module.exports = new SharedResources\nelse\n  angular.module('resist').factory 'SharedResources', -> new SharedResources\n","angular.module('resist').controller 'GameController', [\n  '$state', '$log', '$scope', '$timeout', '$modal', 'GameClient', 'SharedResources',\n  ($state,   $log,   $scope,   $timeout,   $modal,   game,         shared) -> new class GameController\n    constructor: ->\n      @playerId = game.playerId\n      @players = game.players\n      @state = game.state\n      @mission = game.mission\n      @votes = game.votes\n      @voteSuccess = null\n      @shared = shared\n\n      if !@players || !@playerId\n        $state.go 'lobby'\n\n      # Show the intro modal\n      modal = $modal.open\n        templateUrl: 'introModal'\n        controller:  'IntroModalController as modal'\n        resolve:\n          isSpy:    => @isSpy()\n          spyCount: => shared.spyCount Object.keys(@players).length\n\n      # Listen for player model changes\n      $scope.$on 'players change', (event, players) => $timeout =>\n        @players = players\n\n      # Listen for state changes\n      $scope.$on 'state change', (event, state) => $timeout =>\n        @state = state\n\n        # Handle state changes\n        if state is shared.STATE.TEAM_VOTE\n          modal?.dismiss 'cancel'\n          modal = $modal.open\n            templateUrl: 'voteModal'\n            controller:  'VoteModalController as modal'\n            keyboard:    false\n            backdrop:    'static'\n            resolve:\n              team: => @getTeam().map (p) -> p.name\n          modal.result.then (accept) =>\n            game.teamVote accept\n          , =>\n            game.teamVote false\n\n      $scope.$on 'vote result', (event, result) => $timeout =>\n        modal?.dismiss 'cancel'\n        @voteSuccess = result\n\n    # Picks a member to go on the next mission\n    pickMember: (playerId) => game.toggleMemberForMission playerId\n\n    # Locks the current mission team\n    lockTeam: => game.lockTeam()\n\n    # Whether or not this player is a spy\n    isSpy: => game.isSpy()\n\n    # Whether or not this player is the current leader\n    isLeader: => game.isLeader()\n\n    # Calculates the current mission team size\n    teamSize: => game.teamSize()\n\n    # The current mission team\n    getTeam: => game.getTeam()\n\n    # Whether or not the mission team has enough players\n    teamFull: => @getTeam().length is @teamSize()\n\n    showTip: => @state is shared.STATE.TEAM_SELECT || @state is shared.STATE.POST_TEAM_VOTE\n\n    # Gets range for the view\n    getRange: (n) -> [1..n]\n]\n\nangular.module('resist').controller 'IntroModalController', [\n  '$modalInstance', '$scope', 'isSpy', 'spyCount',\n  ($modalInstance,   $scope,   isSpy,   spyCount) -> new class IntroModalController\n    constructor: ->\n      $scope.isSpy = isSpy\n      $scope.spyCount = spyCount\n\n    close: ->\n      $modalInstance.dismiss 'cancel'\n]\n\nangular.module('resist').controller 'VoteModalController', [\n  '$modalInstance', 'team',\n  ($modalInstance,   team) -> new class VoteModalController\n    constructor: -> @team = team\n\n    accept: -> $modalInstance.close true\n    reject: -> $modalInstance.close false\n]\n","angular.module('resist').controller 'LobbyController', [\n  '$state', '$log', '$scope', '$timeout', '$modal', 'GameClient',\n  ($state,   $log,   $scope,   $timeout,   $modal,   game) -> new class LobbyController\n    constructor: ->\n      @playerId = game.playerId\n      @players = game.players\n      @ready = if @players then @players[@playerId]?.ready else false\n\n      $scope.$on 'connected', (event, playerId) =>\n        $timeout => @playerId = playerId\n\n      $scope.$on 'players change', (event, players) =>\n        $timeout =>\n          @players = players\n          @ready = @players[@playerId]?.ready\n\n    toggleReady: =>\n      game.toggleReady()\n      @ready = @players[@playerId]?.ready\n\n    changeName: =>\n      $modal.open\n        templateUrl: 'changeNameModal'\n        controller:  'ChangeNameController as modal'\n        resolve:\n          oldName: => @players[@playerId]?.name\n      .result.then (newName) ->\n        game.changeName newName\n]\n\nangular.module('resist').controller 'ChangeNameController', [\n  '$modalInstance', 'oldName',\n  ($modalInstance,   oldName) -> new class ChangeNameController\n    constructor: ->\n      @name = oldName\n\n    changeName: =>\n      $modalInstance.close @name\n\n    cancel: ->\n      $modalInstance.dismiss 'cancel'\n]\n","app = angular.module('resist')\n\n# Filter for displaying the \"length\" of an object\napp.filter 'objLength', -> (input) ->\n  return 0 if !angular.isObject(input)\n\n  Object.keys(input).length\n","angular.module('resist').factory 'GameClient', [\n  '$state', '$window', '$rootScope', 'SharedResources',\n  ($state,   $window,   $rootScope,   shared) -> new class GameClient\n    io = null\n\n    constructor: ->\n      # Set up the connection to the web socket server\n      io = $window.io()\n\n      # Maintain a list of players and ourself\n      @playerId = null\n      @players = null\n      @state = shared.STATE.SETUP\n      @mission = 1\n      @votes = 0\n\n      @setupLobby()\n\n      # Listen for changes to game mode\n      io.on 'game/start', (state) =>\n        @state = state\n        $state.go 'game'\n\n      io.on 'game/state', (state) =>\n        @state = state\n        $rootScope.$broadcast 'state change', @state\n        console.log \"Game is changing states: #{state}\"\n\n      io.on 'game/vote-result', (result) ->\n        $rootScope.$broadcast 'vote result', result\n\n      # Listen for leadership changes\n      io.on 'player/new-leader', (playerId) =>\n        for id, player of @players\n          player.leader = id is playerId\n        @playersUpdated()\n\n      # Listen for changes to player data\n      io.on 'player/patch', ({playerId, delta}) =>\n        if @players[playerId]\n          p = @players[playerId]\n          console.log \"Incoming patch for #{p.name}:\"\n          console.log delta\n\n        @players[playerId] = {} if not @players[playerId]\n        for key, value of delta\n          @players[playerId][key] = value\n        @playersUpdated()\n\n\n    # Sets up lobby listeners and other things\n    setupLobby: =>\n      # Listen for our connection\n      io.on 'lobby/connected', ({player, players}) =>\n        @playerId = player\n        @players = {}\n        for p in players\n          @players[p.id] = p\n        $rootScope.$broadcast 'connected', player\n        @playersUpdated()\n      io.on 'reconnect', -> $state.go 'lobby'\n\n      io.on 'lobby/leave', (playerId) =>\n        delete @players[playerId]\n        @playersUpdated()\n\n    # Tells the world that the player list has changed in some way\n    playersUpdated: =>\n      $rootScope.$broadcast 'players change', @players\n\n    # Tell the server we want to change our name\n    changeName: (name) ->\n      io.emit 'lobby/change-name', name\n\n    # Toggle this player's ready state\n    toggleReady: =>\n      io.emit 'lobby/ready'\n      @players[@playerId].ready = !@players[@playerId].ready\n      @playersUpdated()\n\n    # Tell the server about a team selection\n    toggleMemberForMission: (playerId) =>\n      return if !@isLeader()\n\n      io.emit 'game/pick-member', playerId\n      @players[playerId].onMission = !@players[playerId].onMission\n      @playersUpdated()\n\n    # Send the lock team event to the server\n    lockTeam: =>\n      return if !@isLeader()\n\n      io.emit 'game/lock-mission'\n\n    # Tell the server our vote\n    teamVote: (accept) =>\n      @players[@playerId].vote = if accept then 'accept' else 'reject'\n      io.emit 'game/team-vote', accept\n\n    # Whether or not this player is a spy\n    isSpy: => @players[@playerId]?.role is 'spy'\n\n    # Whether or not this player is the current leader\n    isLeader: => !!@players[@playerId]?.leader\n\n    # The team size this mission needs\n    teamSize: => shared.teamSize Object.keys(@players).length, @mission\n\n    # The current team\n    getTeam: =>\n      team = []\n      for id, player of @players\n        team.push(player) if player.onMission\n      team\n]\n"],"sourceRoot":"/source/"}